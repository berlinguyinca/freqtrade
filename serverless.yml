service: stasis

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-domain-manager
  - serverless-python-requirements

############################################################################################
# configure out provider and the security guide lines
############################################################################################
provider:
  name: aws
  runtime: python3.6
  region: us-east-2

  #required permissions
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/*"
    - Effect: Allow
      Action:
        - SNS:*
      Resource: { "Fn::Join" : [":", ["arn:aws:sns:${self:custom.region}",  "*:*" ] ]  }

  memorySize: 128
  timeout: 90
  versionFunctions: false

  logRetentionInDays: 3

  #where to store out data, needs to be manually created!
  deploymentBucket:
    name: lambdas-freq

############################################################################################
#custom configuration settings
############################################################################################
custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}

  ###
  # custom domain management
  ###

  domains:
    prod: prod.isaac.international
    test: test.isaac.international
    dev:  dev.isaac.international

  customDomain:
    basePath: "freq"
    domainName: ${self:custom.domains.${self:custom.stage}}
    stage: "${self:custom.stage}"
    createRoute53Record: true

  pythonRequirements:
    dockerizePip: non-linux
    zip: true
    noDeploy:
                  - pytest
                  - moto
                  - pytest-mock  
                  - pytest-cov 
                  - boto3
                  - botocore
                  - telegram  

    invalidateCaches: true

package:
  exclude:
     - node_modules/**
     - freqtrade/tests/**
       
############################################################################################
# this section defines all lambda function and triggers
############################################################################################
functions:
  
 scheduleBacktest:
    handler: freqtrade/aws/backtesting.schedule
    events:
      - http:
          path: backtesting
          method: post
          cors: true

    #defines to which topic we want to connect
    environment:
      topic: ${self:custom.snsTopic}
